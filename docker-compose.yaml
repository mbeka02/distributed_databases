services:
  # Postgres for middleware
  postgres_middleware:
    image: postgres:latest
    container_name: postgres_middleware
    environment:
      - POSTGRES_DB=middleware_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "7002:5432"
    volumes:
      - ./middleware_data:/var/lib/postgresql/data
    networks:
      - distributed_network
  # Postgres service running on linux
  # To use psql in the container run : docker exec -it postgres_site psql -U postgres
  postgres_ubuntu:
    image: postgres:latest
    container_name: postgres_site
    environment:
      - POSTGRES_DB=distributed_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "7000:5432" # Exposing container's port 5432 to host's port 7000
    volumes:
      # - ./postgres_data:/var/lib/postgresql/data
      - ./psql_init:/docker-entrypoint-initdb.d
    networks:
      - distributed_network

  # MariaDB service running on linux
  # To use MariaDB monitor in the container run: docker exec -it mariadb_site mariadb -u root -ppassword
  mariadb_ubuntu:
    image: mariadb:latest
    container_name: mariadb_site
    environment:
      - MARIADB_DATABASE=distributed_db
      - MARIADB_USER=root
      - MARIADB_ROOT_PASSWORD=password
    ports:
      - "7001:3306" # Exposing container's port 3306 to host's port 7001
    volumes:
      # - ./mariadb_data:/var/lib/mysql
      - ./mariadb_init:/docker-entrypoint-initdb.d
    networks:
      - distributed_network

  # MYSQL service on CentOS
  mysql_centos:
    image: centos/mysql-80-centos7:8.0
    container_name: mysql_site
    volumes:
      # - ./mysql_data:/var/lib/mysql
      - ./mysql_init/init.sql:/docker-entrypoint-initdb.d/1.sql
    environment:
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: distributed_db
      MYSQL_USER: admin
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "7003:3306"
    networks:
      - distributed_network

networks:
  distributed_network:
    driver: bridge
